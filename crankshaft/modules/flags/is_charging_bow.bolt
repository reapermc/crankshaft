from wicked_expressions:api import Scoreboard 
from lightning_rod:api import revoke_advancement
from ../flag import Flag
from ../config import Config


def body(flag):
    is_charging = Scoreboard(f"{Config.SCOREBOARD_ROOT}.flag.{flag.flag_id}")['@s']
    advancement_path = flag.path('advancement')
    reward_path = flag.path('advancement_reward')
    p_tick_path = flag.path('p_tick')

    merge function_tag minecraft:tick {"replace": false, "values": [p_tick_path]}
    function p_tick_path:
        as @a:
            if is_charging > 0:
                is_charging -= 1

    advancement advancement_path {
        "criteria": {
            "requirement": {
                "trigger": "minecraft:using_item",
                "conditions": {
                    "item": {
                        "items": [
                            "minecraft:bow"
                        ]
                    }
                }
            }
        },
        "rewards": {
            "function": reward_path
        }
    }

    function reward_path:
        revoke_advancement(advancement_path)
        is_charging = 1
    
    with flag.set_condition():
        if score var is_charging matches 1


is_charging_bow = Flag(body=body, flag_id='is_charging_bow')
