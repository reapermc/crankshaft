from wicked_expressions:api import Scoreboard, StaticVar, Int
from lightning_rod:api import tag, untag
from ../event_handler import BuiltinEvent, Entrypoint
from ../config import Config
from ../flags/is_charging_bow import is_charging_bow
from ./on_player_tick import on_player_tick

def handler(event):
    charge_time = Scoreboard(f"{Config.SCOREBOARD_ROOT}.event.{event.id}")['@s']
    event_fired_tag = f"{Config.TAG_ROOT}.event.{event.id}"
    output = StaticVar(Int)

    if not is_charging_bow:
        execute function event.path('nested_0'):
            if entity @s[tag=event_fired_tag] function event.path('nested_1'):
                untag(event_fired_tag)
                output = charge_time
                event.trigger(output)
                charge_time = 0
    else:
        execute function event.path('nested_2'):
            tag(event_fired_tag)
            charge_time += 1

on_player_charge_bow_end = BuiltinEvent('on_player_charge_bow_end')
on_player_charge_bow_end.attach_handler(handler, on_player_tick, Entrypoint.EVENT)
