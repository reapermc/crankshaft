from wicked_expressions:api import Scoreboard, StaticVar, Int
from lightning_rod:api import tag, untag
from ../event_handler import BuiltinEvent, Entrypoint
from ./on_player_tick import on_player_tick
from ../config import Config
from ../flags/is_airborne import is_airborne

def handler(event):
    air_time = Scoreboard(f"{Config.SCOREBOARD_ROOT}.event.{event.id}.air_time")['@s']
    event_fired_tag = f"{Config.TAG_ROOT}.event.{event.id}"
    output = StaticVar(Int)

    if not is_airborne:
        if entity @s[tag=event_fired_tag] function event.path('nested_0'):
            untag(event_fired_tag)
            output = air_time
            event.trigger(output)
            air_time = 0
    else:
        tag(event_fired_tag)
        air_time += 1

on_player_airborne_end = BuiltinEvent('on_player_airborne_end')
on_player_airborne_end.attach_handler(handler, on_player_tick, Entrypoint.EVENT)
